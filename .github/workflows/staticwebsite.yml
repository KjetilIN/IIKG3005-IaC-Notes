# This is a basic workflow to help you get started with Actions

name: web

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull where the changes are for the web demo
  push:
    paths:
      - 'module-6/web-demo/**'
  # Allow that this can be run manually with a given input to be able to destroy the resource
  workflow_dispatch:
    inputs: 
      action_type:
        description: 'What action should be performed? (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "web"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    name: 'web'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./module-6/web-demo
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: 'Terraform init'
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform plan'
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }} 
        
      - name: 'Echo action_type'
        id: echo
        run: echo ${{ github.event.inputs.action_type }}
        working-directory: ${{ env.WORKING_DIR }} 
                    
      - name: 'Terraform apply'
        id: apply
        if: github.event.inputs.action_type == 'apply' || github.event.inputs.action_type == ''
        run: terraform apply --auto-approve
        working-directory: ${{ env.WORKING_DIR }} 
             # Will destroy if the input is destroy 
      - name: 'Terraform destroy'
        id: destroy
        if: github.event.inputs.action_type == 'destroy'
        run: terraform destroy --auto-approve
        working-directory: ${{ env.WORKING_DIR }} 
        

